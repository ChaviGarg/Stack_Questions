class Solution {
    public String removeDuplicateLetters(String s) {
        
        if(s.length() == 0)
            return "";
        
        int count[] = new int[26];
        boolean visited[] = new boolean[26];
        Stack<Character> stack = new Stack<>();
        
        for(char c : s.toCharArray()){
            count[c - 'a']++;
        }
        for(int i=0; i < s.length(); i++){
            char c = s.charAt(i);
            count[c - 'a']--;
            if(visited[c - 'a'])
                continue;
            while(! stack.isEmpty() && c < stack.peek() && count[stack.peek()-'a'] > 0){
                visited[stack.pop() - 'a'] = false;
            }
            stack.push(c);
            visited[c - 'a'] = true;  
        }
        
        String result = "";
        
        for(char c : stack){
            result += c;
        }
       return result; 
    }
}

// Time Complexity : O(n)
// Space Complexity : O(n)
